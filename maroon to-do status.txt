To-do:

break up login/register into more try/catches

in new doctor/patient, shouldn't call UUIDtoID until the submission step. doing DB query before it makes sense to do so

change prviateCommonDataroutes to commondata routes

In the UUIDToID req, res function, just make it import the UUID to ID back-end function in UUID.js

re-do code documentation

ASAP:
2. Editability of doc info
	when editing info, should first check session storage, then db. if exists, alter db. if doesn't exist, insert

Later:

-- if pt logged in, or vet logged in, shouldn't be allowed to log into the other one.

-- if the doc hasn't entered their basic_doctor_info, then going to their profile is an error - bc it tries to render data that doesn't exist
-- people with existing basic_doctor_info can keep filling out the form. should not be allowed. if data already exists in basic_doctor_info, should be re-routed to /edit-profile
	special cookie sent after registering, which allows user to go to registration routes. 
	If cookie not present, but UUID is present forwards straight to /edit-profile
	If cookie not present and UUID not present, re-direct to register page

-- doctor "" doesnot exist shows up even for doctors who exist, just don't query (not rly sure how to solve, aside from solving the an error occured issue)

-- show first name on home page instead of email. will require decrypt multiple.
--create another header. one for home screen. one for vet screen (no search bar, just calendar, inbox button (chat), settings (make header like airbnb)
	--hide search bar in the vet pages (see app.js)	

--during registration (new-vet/new-patient), the header name becomes nothing. should solve this by deleting the traditional header during non-search pages
