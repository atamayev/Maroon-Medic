To-do:
1. Double Query figure out
	-- double query problem: can see the cause by commenting out the if statement in home vets list. it first makes results = nothing, and then re-queryies
	consider making results into a context. only queryied when needed
2. Fix all double query inefficieneices on the back-end as well. It's dirty
3. Clean vetDahsboard code
4. 0.5: Figure out a more logial way of naming conventions for routing. what is a user/profile?
5. Editability of doc info



-- if the doc hasn't entered their basic_doctor_info, then going to their profile is an error - bc it tries to render data that doesn't exist
-- people with existing basic_doctor_info can keep filling out the form. should not be allowed. if data already exists in basic_doctor_info, should be re-routed to /edit-profile
	special cookie sent after registering, which allows user to go to registration routes. 
	If cookie not present, but UUID is present forwards straight to /edit-profile
	If cookie not present and UUID not present, re-direct to register page
-- show first name on home page instead of email. will require decrypt multiple.

--figure out a way to not have to keep re-writing checkUUID function. maybe create a context? or make it a global variable


--figure out why there are 2 doctorUUID to DoctorID functions (user CTRL, UUID)

--UUID not used in App.js. why is it set?
--consider making microservice architecture - getting complex.
--fix the date problem in new-vet
--make one login/register function for vet/pt. Pass in a third parameter (vet vs pt).
	if vet--> use the vetdb
	if pt--> use the ptdb