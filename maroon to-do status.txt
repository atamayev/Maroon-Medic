To-do:

ASAP:
--send back login/register as an object instead of three vars. same for addingDoctor/Patient Data
	when re-doing this, make sure to capitalize first/lastname, gender, dobmonth correctly. dobmonth should be DOB_month

-- when patient logs in, cannot access the firstname, etc. - crashes site

in login and register front-end, awaits login/register, but navigates regardless of response. send something like: login= true from back-end, then in front-end, if login=true, navigate. otherwise stay



--re-do code documentation

--figure out not putting all routes in app.js. Maybe put the settings routes into the doctorsettings.js

Later:

-- if pt logged in, or vet logged in, shouldn't be allowed to log into the other one.

-- if the doc hasn't entered their basic_doctor_info, then going to their profile is an error - bc it tries to render data that doesn't exist
-- people with existing basic_doctor_info can keep filling out the form. should not be allowed. if data already exists in basic_doctor_info, should be re-routed to /edit-profile
	special cookie sent after registering, which allows user to go to registration routes. 
	If cookie not present, but UUID is present forwards straight to /edit-profile
	If cookie not present and UUID not present, re-direct to register page

-- doctor "" doesnot exist shows up even for doctors who exist, just don't query (not rly sure how to solve, aside from solving the an error occured issue)

-- show first name on home page instead of email. will require decrypt multiple.
--create another header. one for home screen. one for vet screen (no search bar, just calendar, inbox button (chat), settings (make header like airbnb)
	--hide search bar in the vet pages (see app.js)	

--during registration (new-vet/new-patient), the header name becomes nothing. should solve this by deleting the traditional header during non-search pages
