To-do:


ASAP:
-finalize-booking React browser warning
-make inputs into service.js only numbers (no negative signs, other symbols)
wihle the languages saved! message appears, try to delete a language. go into the 'deleting' stage. after the save languages! message disappears, the state of the deleting button reverts to the X

-when deleting, make all of teh parts of the account details require a delete confirmation. change the X delete button to red. when press delete, should plit into 2 buttons- confirm delete, or nevermind
-Include the cost in the finalize booking screen

--change all front-end select month, day, year into a 'date', like in pets.js

-in the appointments table, will need to change patient_ID to pet_ID. then, on the front-end, you need to have a registered pet in order to make an appointment

- when registering as a patient, need to make it clear when the user is entering data regrading the human, and when about the pet
	make the patient-side area where the pt can enter pet details (based on the pet_list)

- if a certain location has no times selected, when that location is selected by hte pt, it should say something like: 'This doc has no available time slots'
	BUG: if one of the locations has no availbale times, and is pressed, then all location show no available tiems
	
-In the checkout screen, ask: Do cyou have insurance, and are you cirious to know what your out of pocket cost will be for [Service_name] with Dr. [name]?
	Only ask if user hasn't entered their insurance in the patient details. if they have, calculate it on the fly

-Reviews:
	Patient's able to make a review after the appointment date is completed, given that the appointment is approved by the doctor.

On the vet dashboard, make the appointments clickable, shows the patients details, patient note, pet details, etc.
	Should go to a newly created appointment page, which nicely lays out the appointment details. 
	If that event is clicked on from calendar view, it should go to that link as well

- go throgh DoctorDashboard Layout txt file

LATER:
-figure out IP Address situation (for the login and security page). Also see if can figure out what kind of device the user has

Make the 'Add Address' Button Finalize a Location, make it within the accordion. 
	So when add address is pressed, it becomes a pretty-looking text (can edit it by pressing a pencil in the top right or something)
	Add a new 'Add new address' button to add a new acordion strip

Write documentation, especially for saveAddresses

-instead of re-rendering pateint dashboard each time, maybe there's a way to set the dashborad data from the back-end.

Add a section in doctordetails for wheather or not the doc works for a practice/company (will neeed to create a lookup and mapping table for vet companies as options)

-- will likely need to simplify the select.js. what it's doing rn is redundant. inside account details, it's setting the value of the type of to the id. then, select has to find which type has that id.
	for example, if select Lemonade insurance, instead of setting selected vet school to Lemondae, it first sends back lemonad'es id, and then converts it to the name
simplification of pre-vet education needed.

Do the calculations for the next appointment dates on the back-end. Will need to figure out which dates/times area unavailable due to conflicting appointments.
	Also, due to the detailed_booking_availblity fields (how far in advance to book, etc.)

-Add an admin user type (manages/can see multiple doctor's activities)

-Add an Administrator user Type (God-mode, for me to log into any account in a read-only mode)
	assume someone's personality, not able to edit (read only)

--while loading, dashboard, account details should be like this:
	https://react-bootstrap.github.io/components/placeholder/

-- consider adding a verified column to the Credentials table (verify for both pts and docs) - not sure how to verify pts, would be a steep onboarding

start using bootstrap or integrate tailwind css classes. tell chatgpt to make pages prettier (header, etc.)

figure out phone_priority (address_data), currently sending it back as 0. Phone priority is for when one location has multiple phone numbers. So each object in the address list might have an object inside that contains phone numbers, link
	See 5/19 commit
-consider bringing back selecting the entire category in vet services

-allow for entering multiple degrees from one college (without causing the education table to break (because of the constraint))

inactivity logout ( 5 mins). implement on the verification level (in the jwt)

-I think the real selling point for pts to use the platform is knowing ahead of time if their insurance provider will cover a certain service. Will either require a lot of research, or data searching. 
	Ask Phil if insurances openly disclose what they will/won't cover for which type of pets. 
	Figure out a way to make it really user for users to figure out if their insurance covers a certain procedure. 
