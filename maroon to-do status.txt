To-do:

-- for all the patient/doctor backend functons (ie auth, UUID), if not doctor or not patient, make an else that returns an error
--make verify tokens (in .env) different for doctor/patient

1. Patient registration/login
2. Editability of doc info
ASAP:

-- make a fillHeader function, make private patient data routes, 
patient dashboard data function. can be same as doctor

--make uuid to id a context. will need to pull this in multiple places. 


Later:

-- if pt logged in, or vet logged in, shouldn't be allowed to log into the other one.

-- if the doc hasn't entered their basic_doctor_info, then going to their profile is an error - bc it tries to render data that doesn't exist
-- people with existing basic_doctor_info can keep filling out the form. should not be allowed. if data already exists in basic_doctor_info, should be re-routed to /edit-profile
	special cookie sent after registering, which allows user to go to registration routes. 
	If cookie not present, but UUID is present forwards straight to /edit-profile
	If cookie not present and UUID not present, re-direct to register page

-- doctor "" doesnot exist shows up even for doctors who exist, just don't query (not rly sure how to solve, aside from solving the an error occured issue)

-- show first name on home page instead of email. will require decrypt multiple.
--create another header. one for home screen. one for vet screen (no search bar, just calendar, inbox button (chat), settings (make header like airbnb)
	--hide search bar in the vet pages (see app.js)	

--in checkdoctorUUID, should search the DB for the found UUID.

