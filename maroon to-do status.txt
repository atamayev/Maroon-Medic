To-do:

-- delete type from everywhere--> make it read the cookie for Doctor or Patient
-- on logout, delete UUID from table
--in checkdoctorUUID, should search the DB for the found UUID., instead of just hchecking the regex
	shouldn't need to feed doctorUUID as a parameter

ASAP:

-- make a fillHeader function
patient dashboard data function. can be same as doctor

1. Patient registration/login
2. Editability of doc info

Later:

-- figure out saving json data to local storage, and then check if data exists in local storage before quierying db. 
-- if pt logged in, or vet logged in, shouldn't be allowed to log into the other one.

-- if the doc hasn't entered their basic_doctor_info, then going to their profile is an error - bc it tries to render data that doesn't exist
-- people with existing basic_doctor_info can keep filling out the form. should not be allowed. if data already exists in basic_doctor_info, should be re-routed to /edit-profile
	special cookie sent after registering, which allows user to go to registration routes. 
	If cookie not present, but UUID is present forwards straight to /edit-profile
	If cookie not present and UUID not present, re-direct to register page

-- doctor "" doesnot exist shows up even for doctors who exist, just don't query (not rly sure how to solve, aside from solving the an error occured issue)

-- show first name on home page instead of email. will require decrypt multiple.
--create another header. one for home screen. one for vet screen (no search bar, just calendar, inbox button (chat), settings (make header like airbnb)
	--hide search bar in the vet pages (see app.js)	


